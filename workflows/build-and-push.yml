name: 'Build and Push`
description: 'This is a template for build-and-push workflow.'
inputs:
runs:
  using: "composite"
  runs-on: ubuntu-latest
  steps:
    - name: Git Checkout
      uses: actions/checkout@v2

    - name: Get Ref Name
      run: echo "REF=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

    - name: Set Development Envars
      if: ${{ env.REF == 'develop' }}
      run: |
        echo "ENVIRONMENT=dev" >> $GITHUB_ENV

    - name: Set Staging Envars
      if: ${{ env.REF == 'master' }}
      run: |
        echo "ENVIRONMENT=stage" >> $GITHUB_ENV

    - name: Set Production Envars
      if: ${{ env.REF == 'release' }}
      run: |
        echo "ENVIRONMENT=prod" >> $GITHUB_ENV

    -
      name: Set Runtime Docker Image ID
      run: echo "RUNTIME_IMAGE_ID=${{ secrets.REGISTRY }}/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]'):${REF}" >> $GITHUB_ENV

    -
      name: Login to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ github.repository_owner }} --password-stdin ${{ secrets.REGISTRY }}

    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    -
      name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - 
      name: Build Production Image
      uses: docker/build-push-action@v2
      with:
        context: .
        target: prod
        push: true
        tags: ${{ env.RUNTIME_IMAGE_ID }}
        build-args: |
          ENVIRONMENT=${ENVIRONMENT}
        cache-from: type=local,src=/tmp/.buildx-cache
        # mode=max: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

    -
      name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
